name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate changelog
      id: changelog
      run: |
        # Get the latest tag
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        
        if [ -z "$LATEST_TAG" ]; then
          echo "First release - generating changelog from all commits"
          git log --pretty=format:"- %s (%h)" --no-merges > CHANGELOG.md
        else
          echo "Generating changelog since $LATEST_TAG"
          git log ${LATEST_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges > CHANGELOG.md
        fi
        
        # Read changelog into output
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## Changes in ${{ github.ref_name }}
          
          ${{ steps.changelog.outputs.changelog }}
          
          ## Installation
          
          ```bash
          git clone https://github.com/habhabhabs/aws-inventag.git
          cd aws-inventag
          pip install -r requirements.txt
          ```
          
          ## Usage
          
          ```bash
          # Convert JSON/YAML to Excel BOM
          python scripts/bom_converter.py --input data.json --output bom.xlsx
          
          # Check tag compliance
          python scripts/tag_compliance_checker.py --input data.json
          ```
          
        draft: false
        prerelease: false

  test-release:
    name: Test Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Test installation
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Test BOM converter
      run: |
        python scripts/bom_converter.py --help
        echo "✅ BOM converter works correctly"

    - name: Test tag compliance checker
      run: |
        if [ -f scripts/tag_compliance_checker.py ]; then
          python scripts/tag_compliance_checker.py --help
          echo "✅ Tag compliance checker works correctly"
        fi