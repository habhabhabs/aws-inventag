name: Simple SBOM and Security Tracking

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  dependency-tracking:
    name: Dependency and Security Tracking
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'website/package-lock.json'

    - name: Generate simple dependency list
      shell: bash
      run: |
        echo "📦 Generating Dependency Inventory"
        echo "=================================="
        
        mkdir -p dependency-reports
        
        # Get version info
        VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "v0.0.0-$(git rev-parse --short HEAD 2>/dev/null || echo unknown)")
        echo "Version: $VERSION"
        
        # Python dependencies from requirements.txt
        if [ -f "requirements.txt" ]; then
          echo "🐍 Python dependencies:"
          pip install -r requirements.txt --dry-run 2>/dev/null | grep "Would install" || echo "No new packages needed"
          
          echo "# Python Dependencies ($VERSION)" > dependency-reports/python-deps.txt
          echo "Generated: $(date)" >> dependency-reports/python-deps.txt
          echo "" >> dependency-reports/python-deps.txt
          cat requirements.txt >> dependency-reports/python-deps.txt
        fi
        
        # Node.js dependencies
        if [ -f "website/package.json" ]; then
          echo "🟨 Node.js dependencies:"
          cd website
          npm list --depth=0 2>/dev/null || echo "Dependencies not installed"
          
          echo "# Node.js Dependencies ($VERSION)" > ../dependency-reports/nodejs-deps.txt
          echo "Generated: $(date)" >> ../dependency-reports/nodejs-deps.txt
          echo "" >> ../dependency-reports/nodejs-deps.txt
          if [ -f "package-lock.json" ]; then
            echo "Lock file exists: package-lock.json" >> ../dependency-reports/nodejs-deps.txt
          fi
          jq -r '.dependencies | keys[]' package.json >> ../dependency-reports/nodejs-deps.txt 2>/dev/null || echo "No dependencies found" >> ../dependency-reports/nodejs-deps.txt
          cd ..
        fi
        
        echo "✅ Dependency inventory completed"

    - name: Run built-in security checks
      shell: bash
      run: |
        echo "🔒 Running Built-in Security Checks"
        echo "==================================="
        
        mkdir -p security-reports
        
        # Python security with pip-audit (lightweight, reliable)
        if [ -f "requirements.txt" ]; then
          echo "🐍 Checking Python dependencies for known vulnerabilities..."
          pip install pip-audit
          pip-audit --desc --format=json --output=security-reports/python-audit.json 2>/dev/null || echo "pip-audit completed with warnings"
          pip-audit --desc 2>/dev/null || echo "Some Python dependencies may have known vulnerabilities"
        fi
        
        # Node.js security with npm audit (built-in, reliable)
        if [ -f "website/package.json" ]; then
          echo "🟨 Checking Node.js dependencies..."
          cd website
          npm install --silent 2>/dev/null || echo "npm install had issues"
          npm audit --json > ../security-reports/npm-audit.json 2>/dev/null || echo "npm audit completed"
          npm audit 2>/dev/null || echo "Some Node.js dependencies may have vulnerabilities"
          cd ..
        fi
        
        echo "✅ Security checks completed"

    - name: Create summary report
      shell: bash
      run: |
        echo "📋 Creating Summary Report"
        echo "=========================="
        
        # Count findings
        PYTHON_ISSUES=0
        NODE_ISSUES=0
        
        if [ -f "security-reports/python-audit.json" ]; then
          PYTHON_ISSUES=$(jq '. | length' security-reports/python-audit.json 2>/dev/null || echo "0")
        fi
        
        if [ -f "security-reports/npm-audit.json" ]; then
          NODE_ISSUES=$(jq '.metadata.vulnerabilities.total' security-reports/npm-audit.json 2>/dev/null || echo "0")
        fi
        
        TOTAL_ISSUES=$((PYTHON_ISSUES + NODE_ISSUES))
        
        # Generate simple summary
        echo "# Security Summary" > security-reports/summary.md
        echo "" >> security-reports/summary.md
        echo "**Date**: $(date)" >> security-reports/summary.md
        echo "**Repository**: ${{ github.repository }}" >> security-reports/summary.md
        echo "**Branch**: ${{ github.ref_name }}" >> security-reports/summary.md
        echo "" >> security-reports/summary.md
        echo "## Results" >> security-reports/summary.md
        echo "- Python vulnerabilities: $PYTHON_ISSUES" >> security-reports/summary.md
        echo "- Node.js vulnerabilities: $NODE_ISSUES" >> security-reports/summary.md
        echo "- **Total issues**: $TOTAL_ISSUES" >> security-reports/summary.md
        echo "" >> security-reports/summary.md
        
        if [ "$TOTAL_ISSUES" -gt 0 ]; then
          echo "⚠️ **Action needed**: Review and update vulnerable dependencies" >> security-reports/summary.md
        else
          echo "✅ **Status**: No known vulnerabilities detected" >> security-reports/summary.md
        fi
        
        # Output for GitHub summary
        echo "## 🔒 Security Tracking Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Python Issues**: $PYTHON_ISSUES" >> $GITHUB_STEP_SUMMARY
        echo "- **Node.js Issues**: $NODE_ISSUES" >> $GITHUB_STEP_SUMMARY
        echo "- **Total Issues**: $TOTAL_ISSUES" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "$TOTAL_ISSUES" -gt 5 ]; then
          echo "⚠️ **Action Required**: Multiple vulnerabilities detected" >> $GITHUB_STEP_SUMMARY
        elif [ "$TOTAL_ISSUES" -gt 0 ]; then
          echo "ℹ️ **Review Recommended**: Some vulnerabilities found" >> $GITHUB_STEP_SUMMARY
        else
          echo "✅ **All Clear**: No known vulnerabilities" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Upload tracking reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: dependency-security-reports
        path: |
          dependency-reports/
          security-reports/
        retention-days: 30